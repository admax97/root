<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pjt.persist.mapper.StuExamInfoMapper" >
  <resultMap id="BaseResultMap" type="com.pjt.persist.model.StuExamInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="exam_id" property="examId" jdbcType="INTEGER" />
    <result column="exam_describe" property="examDescribe" jdbcType="INTEGER" />
    <result column="exam_time" property="examTime" jdbcType="DATE" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="single_score" property="singleScore" jdbcType="INTEGER" />
    <result column="short_ans_score" property="shortAnsScore" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="INTEGER" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, student_id, exam_id, exam_describe, exam_time, score, single_score, short_ans_score, 
    time, create_id, create_time, update_id, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pjt.persist.model.StuExamInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from student_exam_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student_exam_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student_exam_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pjt.persist.model.StuExamInfo" >
    insert into student_exam_info (id, student_id, exam_id, 
      exam_describe, exam_time, score, 
      single_score, short_ans_score, time, 
      create_id, create_time, update_id, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{examId,jdbcType=INTEGER}, 
      #{examDescribe,jdbcType=INTEGER}, #{examTime,jdbcType=DATE}, #{score,jdbcType=INTEGER}, 
      #{singleScore,jdbcType=INTEGER}, #{shortAnsScore,jdbcType=INTEGER}, #{time,jdbcType=INTEGER}, 
      #{createId,jdbcType=INTEGER}, #{createTime,jdbcType=DATE}, #{updateId,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.pjt.persist.model.StuExamInfo" >
    insert into student_exam_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="examId != null" >
        exam_id,
      </if>
      <if test="examDescribe != null" >
        exam_describe,
      </if>
      <if test="examTime != null" >
        exam_time,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="singleScore != null" >
        single_score,
      </if>
      <if test="shortAnsScore != null" >
        short_ans_score,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="examId != null" >
        #{examId,jdbcType=INTEGER},
      </if>
      <if test="examDescribe != null" >
        #{examDescribe,jdbcType=INTEGER},
      </if>
      <if test="examTime != null" >
        #{examTime,jdbcType=DATE},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="singleScore != null" >
        #{singleScore,jdbcType=INTEGER},
      </if>
      <if test="shortAnsScore != null" >
        #{shortAnsScore,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=INTEGER},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pjt.persist.model.StuExamInfoExample" resultType="java.lang.Integer" >
    select count(*) from student_exam_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.pjt.persist.model.StuExamInfo" >
    update student_exam_info
    <set >
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="examId != null" >
        exam_id = #{examId,jdbcType=INTEGER},
      </if>
      <if test="examDescribe != null" >
        exam_describe = #{examDescribe,jdbcType=INTEGER},
      </if>
      <if test="examTime != null" >
        exam_time = #{examTime,jdbcType=DATE},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="singleScore != null" >
        single_score = #{singleScore,jdbcType=INTEGER},
      </if>
      <if test="shortAnsScore != null" >
        short_ans_score = #{shortAnsScore,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=INTEGER},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pjt.persist.model.StuExamInfo" >
    update student_exam_info
    set student_id = #{studentId,jdbcType=INTEGER},
      exam_id = #{examId,jdbcType=INTEGER},
      exam_describe = #{examDescribe,jdbcType=INTEGER},
      exam_time = #{examTime,jdbcType=DATE},
      score = #{score,jdbcType=INTEGER},
      single_score = #{singleScore,jdbcType=INTEGER},
      short_ans_score = #{shortAnsScore,jdbcType=INTEGER},
      time = #{time,jdbcType=INTEGER},
      create_id = #{createId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=DATE},
      update_id = #{updateId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>